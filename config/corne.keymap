/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        Layer3 {
            bindings = <&mo 3>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E                         &kp R                  &kp T              &kp Y        &kp U                  &kp I       &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D                         &kp F                  &kp G              &kp H        &kp J                  &kp K       &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C                         &kp V                  &kp B              &kp N        &kp M                  &kp COMMA   &kp DOT  &kp FSLH  &kp ESC
                         &mt LA(LS(LG(LC(LGUI)))) TAB  &mt LEFT_SHIFT ESCAPE  &lt 1 BACKSPACE    &lt 2 SPACE  &mt RIGHT_SHIFT ENTER  &caps_word
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LS(LA(LC(LG(NUMBER_3))))  &kp TAB             &kp HOME      &kp UP_ARROW  &kp END       &kp PAGE_UP      &kp SLASH  &kp N7        &kp N8        &kp N9        &kp COLON   &kp C_PREVIOUS
&kp LS(LC(LG(LA(NUMBER_4))))  &kp LS(TAB)         &kp LEFT      &kp DOWN      &kp RIGHT     &kp PAGE_DOWN    &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp N0      &kp C_PLAY_PAUSE
&kp LS(LA(LC(LG(NUMBER_2))))  &kp LA(LC(LG(N5)))  &kp C_VOL_DN  &kp C_MUTE    &kp C_VOL_UP  &kp DEL          &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD  &kp C_NEXT
                                                                &trans        &trans        &trans           &trans     &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LG(AT_SIGN)  &kp CARET       &kp LESS_THAN         &kp GREATER_THAN       &kp DLLR         &kp PRCNT    &kp AT_SIGN  &kp AMPS         &kp ASTRK      &kp SQT    &kp GRAVE          &trans
&trans           &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp EQUAL    &kp MINUS    &kp PLUS         &kp MINUS      &kp SLASH  &kp DOUBLE_QUOTES  &trans
&trans           &kp TILDE       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp UNDERSCORE   &kp HASH     &kp PIPE     &kp EXCLAMATION  &kp SEMICOLON  &kp COLON  &kp PERIOD         &trans
                                                       &trans                 &trans           &trans       &trans       &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&none       &none         &none         &none         &none         &none           &ext_power EP_TOG  &sys_reset  &bootloader  &none            &none            &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bl BL_TOG         &bl BL_INC  &bl BL_DEC   &rgb_ug RGB_TOG  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD
&none       &none         &none         &none         &none         &none           &none              &none       &none        &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none
                                        &none         &none         &none           &none              &none       &none
            >;
        };
    };
};
